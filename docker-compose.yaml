services:
  orion:
    image: fiware/orion
    ports:
      - "1026:1026"
    depends_on:
      - mongo
    command: 
      -dbURI mongodb://mongo
      -corsOrigin __ALL
    networks:
      - fiware

  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    command: --nojournal
    volumes:
      - mongo_data:/data/db
    networks:
      - fiware

  cygnus:
    image: fiware/cygnus-ngsi
    hostname: cygnus
    container_name: fiware-cygnus
    depends_on:
      - postgres-db
    ports:
      - "5050:5050"
      - "5051:5051"
      - "5055:5055"
      - "5080:5080" 
    environment:
      - "CYGNUS_MULTIAGENT =true"
      - "CYGNUS_POSTGRESQL_HOST=postgres-db" # Hostname of the PostgreSQL server used to persist historical context data
      - "CYGNUS_POSTGRESQL_PORT=5432" # Port that the PostgreSQL server uses to listen to commands
      - "CYGNUS_POSTGRESQL_DATABASE=orion"
      - "CYGNUS_POSTGRESQL_USER=postgres" # Username for the PostgreSQL database user
      - "CYGNUS_POSTGRESQL_PASS=password" # Password for the PostgreSQL database user
      - "CYGNUS_POSTGRESQL_ENABLE_CACHE=false" # Switch to enable caching within the PostgreSQL configuration
      - "CYGNUS_POSTGRESQL_SERVICE_PORT=5055" # The port the agent.conf is configured for
      - "CYGNUS_POSTGRESQL_ATTR_PERSISTENCE=column"
      - "CYGNUS_POSTGRESQL_SERVICE=orion"
      - "CYGNUS_POSTGRESQL_ENABLE=true"
      - "CYGNUS_POSTGRESQL_DATA_MODEL=dm-by-fixed-entity-type"
      
      - "CYGNUS_LOG_LEVEL=DEBUG" # The logging level for Cygnus
      - "CYGNUS_API_PORT=5080"
      
      - "CYGNUS_MONGO_HOSTS= localhost:27017"
      - "CYGNUS_MONGO_DB= orion"
      - "CYGNUS_MONGO_USER ="
      - "CYGNUS_MONGO_PASS="

      - "CYGNUS_MONGO_SERVICE_PORT=5051"
      
      - "CYGNUS_MYSQL_HOST = mysql"
      - "CYGNUS_MYSQL_DB = orion"
      - "CYGNUS_MYSQL_PORT = 3306"
      - "CYGNUS_MYSQL_USER = admin"
      - "CYGNUS_MYSQL_PASS = 1111"
      - "CYGNUS_MYSQL_DATA_MODEL= dm-by-entity"
      - "CYGNUS_MYSQL_ATTR_PERSISTENCE=row"
      - "CYGNUS_MYSQL_SERVICE_PORT=5050"
      
    volumes:
      - ./agent.conf:/opt/apache-flume/conf/agent.conf 
      - ./agent.conf:/opt/fiware-cygnus/cygnus-ngsi/conf/agent.conf
    networks:
      - fiware

  postgres-db:
    image: postgres
    hostname: postgres-db
    container_name: db-postgres
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=orion"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fiware
  
  postgis:
    image: postgis/postgis
    hostname: postgis
    container_name: postgis
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=orion
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=password
      - POSTGRES_PASSWORD=1111
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - RUN_AS_ROOT=true
    ports:
      - "5433:5433"
    restart: on-failure
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    

  sth:
    image: telefonicaiot/fiware-sth-comet
    hostname: sth
    container_name: sth
    depends_on:
      - mongo
    ports:
      - "8666:8666"
    environment:
      - STH_HOST=0.0.0.0
      - STH_PORT=8666
      - DB_PREFIX=sth_
      - DB_URI=mongo:27017
      - LOGOPS_LEVEL=DEBUG
    command: 
      npm start
    networks:
      - fiware
  
  iot-agent-json:
    image: fiware/iotagent-json
    hostname: iot-agent-json
    container_name: iot-agent-json
    restart: always
    depends_on:
      - mongo
    environment:
        - IOTA_CB_HOST=orion
        - IOTA_CB_PORT=1026
        - IOTA_NORTH_PORT=4041
        - IOTA_REGISTRY_TYPE=mongodb
        - IOTA_LOG_LEVEL=DEBUG
        - IOTA_TIMESTAMP=true
        - IOTA_CB_NGSI_VERSION=v2
        - IOTA_AUTOCAST=true
        - IOTA_MONGO_HOST=mongo
        - IOTA_MONGO_PORT=27017
        - IOTA_MONGO_DB=orion
        - IOTA_HTTP_PORT=7896
        - IOTA_PROVIDER_URL=http://iot-agent-json:4041
        - IOTA_AUTOCAST=true
        - IOTA_DEFAULT_RESOURCE=/iot/json
    ports:
      - "4041:4041"
      - "7896:7896"
    networks:
      - fiware

  iot-agent-ul:
    image: fiware/iotagent-ul
    hostname: iot-agent-ul
    container_name: fiware-iot-agent
    depends_on:
      - mongo
    ports:
      - "4061:4061"
      - "7897:7897"
    environment:
      - "IOTA_CB_HOST=orion"
      - "IOTA_CB_PORT=1026"
      - "IOTA_NORTH_PORT=4061"
      - "IOTA_REGISTRY_TYPE=mongodb"
      - "IOTA_LOG_LEVEL= DEBUG"
      - "IOTA_TIMESTAMP=true"
      - "IOTA_MONGO_HOST=mongo"
      - "IOTA_MONGO_PORT=27017"
      - "IOTA_MONGO_DB=orion"
      - "IOTA_HTTP_PORT=7897"
      - "IOTA_PROVIDER_URL=http://iot-agent:4061"
      - "IOTA_AUTOCAST=true"
    networks:
      - fiware
  
  mysql:
    image: mysql
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1111
      MYSQL_DATABASE: orion
      MYSQL_USER: admin
      MYSQL_PASSWORD: 1111
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - fiware

  # PERSEO
  # perseo-mongo:
  #   image: mongo:4.2
  #   hostname: perseo-mongo
  #   container_name: perseo-mongo
  #   volumes:
  #       - ./mongo_perseo:/data/db
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #   networks:
  #     - fiware

  # perseo-core:
  #   image: fiware/perseo-core
  #   hostname: perseo-core
  #   container_name: perseo-core
  #   environment:
  #       - PERSEO_FE_URL=http://perseo-fe:9090
  #       - MAX_AGE=6000
  #   depends_on:
  #       - perseo-mongo
  #   deploy:
  #       replicas: 1
  #       restart_policy:
  #           condition: on-failure
  #   networks:
  #       - perseo
    
  # perseo-fe:
  #   image: fiware/perseo
  #   hostname: perseo-fe
  #   container_name: perseo-fe
  #   ports:
  #       - 9090:9090
  #       - 8081:8080
  #   depends_on:
  #       - perseo-core
  #   environment:
  #       - PERSEO_MONGO_ENDPOINT=perseo-mongo
  #       - PERSEO_CORE_URL=http://perseo-core:8080
  #       - PERSEO_LOG_LEVEL=debug
  #       - PERSEO_ORION_URL=http://orion:1026/
  #       # - PERSEO_SMTP_HOST=www.hostname.com
  #       # - PERSEO_SMTP_PORT=25
  #       # - PERSEO_SMTP_SECURE=false
  #   deploy:
  #       replicas: 1
  #       restart_policy:
  #           condition: on-failure
  #   networks:
  #       perseo:
  #       fiware:
  # FIN PERSEO


  python:
    image: python:3
    container_name: python
    networks:
      - fiware
    # volumes:
    #   - pythonCurl.py: 

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_WEB_HTTP_HOST= 0.0.0.0
    volumes:
      - ./data/:/data
      - ./driver:/driver
      - ./content_repository:/opt/nifi/nifi-current/content_repository
      - ./database_repository:/opt/nifi/nifi-current/database_repository
      - ./extensions:/opt/nifi/nifi-current/extensions
      - ./flowfile_repopsitory:/opt/nifi/nifi-current/flowfile_respository
      - ./provenance_repository:/opt/nifi/nifi-current/provenance_repository
    networks:
      - fiware
    

volumes:
  mongo_data: 
  postgres_data:
  mysql_data:
  postgis-data:
  dbbackups:
  mongo_perseo:

networks:
  fiware:
    driver: bridge
  perseo: