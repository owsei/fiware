services:
  orion:
    image: telefonicaiot/fiware-orion
    ports:
      - "1026:1026"
    depends_on:
      - mongo
    command: -dbURI mongodb://mongo
    networks:
      - fiware

  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    command: --nojournal
    volumes:
      - mongo_data:/data/mongodb
    networks:
      - fiware

  cygnus:
    image: fiware/cygnus-ngsi
    hostname: cygnus
    container_name: fiware-cygnus
    networks:
      - fiware
    depends_on:
      - postgres-db
    ports:
      - "5050:5050"
      - "5051:5051"
      - "5055:5055"
      - "5080:5080" 
    environment:
      - "CYGNUS_POSTGRESQL_HOST=postgres-db" # Hostname of the PostgreSQL server used to persist historical context data
      - "CYGNUS_POSTGRESQL_PORT=5432" # Port that the PostgreSQL server uses to listen to commands
      - "CYGNUS_POSTGRESQL_USER=postgres" # Username for the PostgreSQL database user
      - "CYGNUS_POSTGRESQL_PASS=password" # Password for the PostgreSQL database user
      - "CYGNUS_POSTGRESQL_ENABLE_CACHE=false" # Switch to enable caching within the PostgreSQL configuration
      - "CYGNUS_POSTGRESQL_SERVICE_PORT=5055" # The port the agent.conf is configured for
      
      - "CYGNUS_LOG_LEVEL=DEBUG" # The logging level for Cygnus
      - "CYGNUS_SERVICE_PORT=5055" # Notification Port that Cygnus listens to for Postgres subscriptions
      - "CYGNUS_API_PORT=5080" 
      
      - "CYGNUS_MONGO_HOSTS= localhost:27017"
      - "CYGNUS_MONGO_DB= orion"
      - "CYGNUS_MONGO_SERVICE_PORT=5051"
      
      - CYGNUS_MYSQL_HOST=mysql
      - CYGNUS_MYSQL_PORT=3306
      - CYGNUS_MYSQL_USER=admin
      - CYGNUS_MYSQL_PASS=1111
      - CYGNUS_MYSQL_DB=orion
    


  postgres-db:
    image: postgres
    hostname: postgres-db
    container_name: db-postgres
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=orion"
    volumes:
      - postgres_data:/data/postgresdb
    networks:
      - fiware
  

  sth:
    image: telefonicaiot/fiware-sth-comet
    hostname: sth
    container_name: sth
    depends_on:
      - mongo
    ports:
      - "8666:8666"
    environment:
      - STH_HOST=0.0.0.0
      - STH_PORT=8666
      - DB_PREFIX=sth_
      - DB_URI=mongo:27017
      - LOGOPS_LEVEL=DEBUG
    command: 
      npm start
    networks:
      - fiware
  
  # sth-comet:
  #   image: fiware/sth-comet
  #   hostname: sth-comet
  #   container_name: fiware-sth-comet
  #   depends_on:
  #       - mongo
  #   networks:
  #       - default
  #   ports:
  #       - "8666:8666"
  #   environment:
  #       - STH_HOST=0.0.0.0
  #       - STH_PORT=8666
  #       - DB_PREFIX=sth_
  #       - DB_URI=mongo-db:27017
  #       - LOGOPS_LEVEL=DEBUG
  #   networks:
  #     - fiware
    

  iot-agent-json:
    image: fiware/iotagent-json
    container_name: iot-agent-json
    restart: always
    depends_on:
      - mongo
    environment:
      - IOTA_CB_HOST=orion
      - IOTA_CB_PORT=1026
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb
      - IOTA_MONGO_HOST=mongo
      - IOTA_MONGO_PORT=27017
      - IOTA_MONGO_DB=iotagentjson
      - IOTA_HTTP_PORT=7896
      - IOTA_PROVIDER_URL=http://iot-agent-json:4041
    ports:
      - "4041:4041"
      - "7896:7896"
    networks:
      - fiware

  mysql:
    image: mysql:latest
    container_name: mi_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1701
      MYSQL_DATABASE: orion
      MYSQL_USER: admin
      MYSQL_PASSWORD: 1111
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - fiware
    
volumes:
  mongo_data: 
  postgres_data:
  mysql_data:

networks:
  fiware:
    driver: bridge